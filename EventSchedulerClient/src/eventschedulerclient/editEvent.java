/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eventschedulerclient;

import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author anshal
 */
public class editEvent extends javax.swing.JFrame {

    /**
     * Creates new form editEvent
     */
    public final int EDIT_EVENT=7,INVITE_LINK=8;
    DataOutputStream dos;
    DataInputStream dis;
    int eventId;
    int hostId;
    Socket sock;
    int port;
    public editEvent(int hostId,int eventId,DataOutputStream dos,DataInputStream dis,Socket sock,int port) {
        initComponents();
        this.hostId=hostId;
        this.dos=dos;
        this.dis=dis;
        this.eventId=eventId;
        this.sock=sock;
        this.port=port;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        inviteUser = new javax.swing.JButton();
        inviteLink = new javax.swing.JTextField();
        upload = new javax.swing.JButton();
        browseInvite = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 33, 240, 30));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 128, 0));
        jLabel1.setText("UserName:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 38, 116, -1));

        inviteUser.setBackground(new java.awt.Color(152, 251, 152));
        inviteUser.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        inviteUser.setForeground(new java.awt.Color(0, 128, 0));
        inviteUser.setText("Invite User");
        inviteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviteUserActionPerformed(evt);
            }
        });
        getContentPane().add(inviteUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 33, -1, 30));

        inviteLink.setEditable(false);
        getContentPane().add(inviteLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 89, 240, 30));

        upload.setBackground(new java.awt.Color(152, 251, 152));
        upload.setFont(new java.awt.Font("Ubuntu", 0, 17)); // NOI18N
        upload.setForeground(new java.awt.Color(0, 128, 0));
        upload.setText("Upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });
        getContentPane().add(upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 89, 82, 30));

        browseInvite.setBackground(new java.awt.Color(152, 251, 152));
        browseInvite.setForeground(new java.awt.Color(0, 128, 0));
        browseInvite.setText("Browse Invite");
        browseInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseInviteActionPerformed(evt);
            }
        });
        getContentPane().add(browseInvite, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 89, -1, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/bg.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 0, 490, 180));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviteUserActionPerformed
        // TODO add your handling code here:
        String uName=userName.getText();
        try {
            dos.writeInt(EDIT_EVENT);
            dos.writeInt(eventId);
            dos.writeInt(hostId);
            dos.writeUTF(uName);
            int response=dis.readInt();
            if(response==0){
                userName.setText("");
            }
            else if(response==1){
                JOptionPane.showMessageDialog(null,"User does not exist :(");
            }
            else{
                JOptionPane.showMessageDialog(null,"You have already invited this user");
            }
        } catch (IOException ex) {
            Logger.getLogger(editEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inviteUserActionPerformed

    private void browseInviteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseInviteActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc=new JFileChooser();
         jfc.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result=jfc.showOpenDialog(null);
        String filePath;
        File file;
        if(result==JFileChooser.APPROVE_OPTION)
        {
            file=jfc.getSelectedFile();
             filePath=file.getAbsolutePath();
            inviteLink.setText(filePath);
            //Check of pdf to be pending ...
           
            
        }
    }//GEN-LAST:event_browseInviteActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        System.out.println("Parllel Connection Made :)");
        File file=new File(inviteLink.getText());
        System.out.println(file);
        int size=(int) file.length();
        byte[] buffer=new byte[1024*1024];
        InputStream fis;
        try {
            fis = new FileInputStream(file);
            System.out.println("I m here bitch ;)");
            
            dos.writeInt(INVITE_LINK);
            Socket tmpSocket=new Socket("localhost",port);
            OutputStream os=tmpSocket.getOutputStream();
            dos.writeInt(size);
            dos.writeInt(eventId);
            int count=0;
            while((count=fis.read(buffer))>0){
                os.write(buffer,0,count);
            }
            os.close();
            fis.close();
            tmpSocket.close();
            inviteLink.setText("");
            
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(editEvent.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(editEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_uploadActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseInvite;
    private javax.swing.JTextField inviteLink;
    private javax.swing.JButton inviteUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton upload;
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
